# Exported from:        http://MBP-Marin:5516/
# Release version:      24.1.0
# Date created:         Wed Oct 09 16:14:03 CEST 2024

---
apiVersion: xl-release/v1
kind: Templates
metadata:
  path: Workflows/Digital.ai Deploy
  home: Digital.ai - Official/Workflows/Digital.ai Deploy
spec:
- template: GCP setup application with Digital.ai Deploy
  description: "Seamlessly create an application in Digital.ai Deploy that can set\
    \ up virtual machine instances in GCP, including its respective environment and\
    \ infrastructure configuration."
  scheduledStartDate: 2023-03-31T05:30:00+02:00
  dueDate: 2023-03-31T06:30:00+02:00
  phases:
  - phase: Setup Env and Infra
    tasks:
    - name: Specify Deploy Server Details
      type: xlrelease.UserInputTask
      description: Select the Digital.ai Deploy Server Connection onto which the Google
        Cloud Platform application has to be created. You can create a new connection
        if you have not created one.
      variables:
      - deployServer
    - name: Specify Environment Name
      type: xlrelease.UserInputTask
      description: Specify the name of the environment CI to be created in the Digital.ai
        Deploy Server.
      variables:
      - environmentName
    - name: Create Environment
      type: deploy.CreateCI
      description: Creates an environment CI with the given name in the Digital.ai
        Deploy Server.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Environments/${environmentName}"
      ciType: udm.Environment
      jsonDescriptor: "{}"
    - name: Specify Google Account Parameters
      type: xlrelease.UserInputTask
      description: Specify the connection details for the Google cloud platform account.
      variables:
      - googleAccountCloudName
      - gcpProjectId
      - gcpClientEmail
      - gcpPrivateKey
    - name: Create Google Account Cloud Infra
      type: deploy.CreateCI
      description: Creates an Google Cloud CI in the Digital.ai Deploy Server with
        the details specified in the previous step.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Infrastructure/${googleAccountCloudName}"
      ciType: google.AccountCloud
      jsonDescriptor: |-
        {
            "projectId": "${gcpProjectId}",
            "clientEmail": "${gcpClientEmail}",
            "privateKey": ""
        }
      addToEnvironment: true
      envID: "Environments/${environmentName}"
    - name: Set Google Credentials
      type: deploy.UpdateCIPropertyWithSecretValue
      description: Sets the private key information in the previously created Google
        Cloud CI in Digital.ai Deploy server.
      variableMapping:
        propertyValue: "${gcpPrivateKey}"
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Infrastructure/${googleAccountCloudName}"
      ciProperty: privateKey
    - name: Check Connection of Google account
      type: deploy.ControlTask
      description: Runs a Check Connection control task on the created Google Cloud
        CI in the Digital.ai Deploy server to validate the specified credentials.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciId: "Infrastructure/${googleAccountCloudName}"
      taskName: checkConnection
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
  - phase: Setup Application
    tasks:
    - name: Specify Application Name
      type: xlrelease.UserInputTask
      description: Specify the name of the application to be created in the Digital.ai
        Deploy server.
      variables:
      - applicationName
    - name: Create Application
      type: deploy.CreateCI
      description: Creates an application with the specified name in the Digital.ai
        Deploy server.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Applications/${applicationName}"
      ciType: udm.Application
      jsonDescriptor: "{}"
    - name: Specify Package Name
      type: xlrelease.UserInputTask
      description: Specify a package name to be created within the application created
        in Digital.ai Deploy server in the previous step.
      variables:
      - packageName
    - name: Create Deployment Package
      type: deploy.CreateCI
      description: Creates a deployment package with the specfied name in the application
        created in Digital.ai Deploy server.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Applications/${applicationName}/${packageName}"
      ciType: udm.DeploymentPackage
      jsonDescriptor: "{}"
    - name: Specify Intance Spec Parameters
      type: xlrelease.UserInputTask
      description: Specify the Instance specifications which will be used to create
        the application package in Digital.ai Deploy server.
      variables:
      - zone
      - machine
      - image_project
      - image
      - waitTimeForCreate
      - waitTimeForDestroy
    - name: Create Google Instance spec
      type: deploy.CreateCI
      description: Creates the InstanceSpec CI with the specified details in the application
        package created in Digital.ai Deploy server in the previous steps.
      variableMapping:
        server: "${deployServer}"
      capabilities:
      - remote
      ciID: "Applications/${applicationName}/${packageName}/${instanceSpecName}"
      ciType: googlecloud.compute.InstanceSpec
      jsonDescriptor: |-
        {
            "zone": "${zone}",
            "machine": "${machine}",
            "imageProject": "${image_project}",
            "image": "${image}",
            "waitOnCreate": "${waitTimeForCreate}",
            "waitOnDestroy": "${waitTimeForDestroy}"
        }
    color: "#3d6c9e"
  - phase: Autoconfigure Release
    tasks:
    - name: Live deployment configuration input
      type: xlrelease.UserInputTask
      description: Enter desired name for your application configuration.
      variables:
      - liveDeploymentConfigurationName
    - name: Create live deployment configuration
      type: xlrelease.ScriptTask
      description: Creates configuration item to follow onboarded application.
      script: |-
        from com.xebialabs.xlrelease.domain import Configuration
        from com.xebialabs.deployit.plugin.api.reflect import Type

        liveDeploymentConfiguration = Configuration()
        liveDeploymentConfiguration.type = Type.valueOf("deploy.DeploymentConfig")
        liveDeploymentConfiguration.title = "${liveDeploymentConfigurationName}"
        liveDeploymentConfiguration.folderId = getCurrentFolder().getId()
        liveDeploymentConfiguration.setProperty("application", "Applications/${applicationName}")
        liveDeploymentConfiguration.setProperty("environment", "Environments/${environmentName}")

        liveDeploymentConfiguration = configurationApi.addConfiguration(liveDeploymentConfiguration)

        releaseVariables['liveDeploymentConfigurationId'] = liveDeploymentConfiguration.getId()
    - name: Setup deployment provider
      type: xlrelease.ScriptTask
      description: Creates required configuration items in Release for connection
        to deployment provider.
      script: |-
        from com.xebialabs.xlrelease.api.v1.forms import DeploymentProviderSetup

        folderId = getCurrentFolder().getId()
        configId = releaseVariables['liveDeploymentConfigurationId']
        serverId = releaseVariables['deployServer']

        deploymentProviderSetup = DeploymentProviderSetup(folderId, serverId, configId)

        statusWebhookEventSourceId = deploymentProviderApi.setupDeploymentProvider(deploymentProviderSetup)

        releaseVariables['statusWebhookEventSourceId'] = statusWebhookEventSourceId
    - name: Autoconfigure deployment provider
      type: xlrelease.ScriptTask
      description: Generates Deploy configuration items required to enable live event
        notifications.
      script: |-
        autoConfigResponse = deploymentProviderApi.autoconfigureDeploymentProvider("${statusWebhookEventSourceId}")

        releaseVariables['autoconfigMessage'] = autoConfigResponse.message
        releaseVariables['autoconfigUrl'] = autoConfigResponse.url
        releaseVariables['autoconfigDetails'] = autoConfigResponse.details
    - name: Autoconfiguration response
      type: xlrelease.Task
      description: |-
        ${autoconfigMessage}

        [View in Deploy](${autoconfigUrl})
    color: "#3d6c9e"
  kind: WORKFLOW
  categories:
  - Application onboarding
  - Application Life Cycle Management
  - Cloud & Container
  variables:
  - type: xlrelease.StringVariable
    key: environmentName
    description: Name of the environment CI in Deploy
    value: gcp_env
  - type: xlrelease.StringVariable
    key: googleAccountCloudName
    description: Name of Google Cloud CI to be created in Digital.ai Deploy server
    value: google_cloud
  - type: xlrelease.StringVariable
    key: gcpProjectId
    description: Google Cloud Platform project id
    value: gcp_project_id
  - type: xlrelease.PasswordStringVariable
    key: gcpPrivateKey
    showOnReleaseStart: false
    description: Google Cloud Platform account private key
  - type: xlrelease.StringVariable
    key: applicationName
    description: Name of the application CI in Deploy
    value: gcp_app
  - type: xlrelease.StringVariable
    key: packageName
    description: Name of the applicaiton package in Deploy
    value: "1.0"
  - type: xlrelease.StringVariable
    key: instanceSpecName
    description: Name of the Instance Spec CI in Deploy
    value: gcp_instance_spec_name
  - type: xlrelease.StringVariable
    key: machine
    description: The Google machine to use
    value: machine
  - type: xlrelease.StringVariable
    key: image_project
    description: Google Project where the image is stored
    value: image_project
  - type: xlrelease.StringVariable
    key: zone
    description: Instance creation zone
    value: zone
  - type: xlrelease.StringVariable
    key: image
    description: Google image to use
    value: image
  - type: xlrelease.StringVariable
    key: waitTimeForCreate
    description: The time to wait for creation in seconds
    value: wait_for_create
  - type: xlrelease.StringVariable
    key: waitTimeForDestroy
    description: The time to wait for deletion in seconds
    value: wait_time_for_destroy
  - type: xlrelease.StringVariable
    key: gcpClientEmail
    description: Google Cloud Platform client email
    value: gcp_client_email
  - type: xlrelease.ReferenceVariable
    key: deployServer
    showOnReleaseStart: false
    label: Deploy Server
    description: Connection to the Deploy server
    referencedType: digitalai.DeployServer
  - type: xlrelease.StringVariable
    key: managedApplicationId
    requiresValue: false
    showOnReleaseStart: false
    label: Application ID
    description: Application ID in Digital.ai Release
  - type: xlrelease.StringVariable
    key: statusWebhookEventSourceId
    requiresValue: false
    showOnReleaseStart: false
  - type: xlrelease.StringVariable
    key: liveDeploymentConfigurationId
    requiresValue: false
    showOnReleaseStart: false
  - type: xlrelease.StringVariable
    key: liveDeploymentConfigurationName
    requiresValue: false
    showOnReleaseStart: false
    label: Name
    description: The name of live deployment configuration
  - type: xlrelease.StringVariable
    key: autoconfigDetails
    requiresValue: false
    showOnReleaseStart: false
  - type: xlrelease.StringVariable
    key: autoconfigMessage
    requiresValue: false
    showOnReleaseStart: false
  - type: xlrelease.StringVariable
    key: autoconfigUrl
    requiresValue: false
    showOnReleaseStart: false
  disableNotifications: true
  author: Digital.ai
  logo:
    type: xlrelease.TemplateLogo
    contentType: image/svg+xml
    file: !file "template-logo/a8eb104385bb88959e385eec7b22eb96943650e7/deploy.svg"
  defaultTargetFolder: Digital.ai - Official/Workflow Executions
