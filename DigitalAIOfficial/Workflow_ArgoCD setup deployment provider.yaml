# Exported from:        http://MBP-Marin:5516/
# Release version:      24.1.0
# Date created:         Wed Oct 09 16:14:03 CEST 2024

---
apiVersion: xl-release/v1
kind: Templates
metadata:
  path: /
  home: Digital.ai - Official
spec:
- template: ArgoCD setup deployment provider
  description: Create required connections for ArgoCD deployment provider
  scheduledStartDate: 2024-08-28T09:00:00+02:00
  dueDate: 2024-08-28T10:00:00+02:00
  phases:
  - phase: User input
    tasks:
    - name: Check if remote runner exists
      type: xlrelease.ScriptTask
      script: |-
        def check_runners(runners):
          for runner in runners:
            if runner["enabled"] and "remote" in runner["capabilities"]:
              return True
          return False

        runners = configurationApi.searchByTypeAndTitle("xlrelease.JobRunner", "")

        if not check_runners(runners):
          raise Exception("There is no job runner with 'remote' capability enabled")
    - name: Choose connection
      type: xlrelease.UserInputTask
      description: Choose ArgoCD server which you want to be configured.
      variables:
      - server
    color: "#3d6c9e"
  - phase: Configure connection
    tasks:
    - name: Setup deployment provider
      type: xlrelease.ScriptTask
      description: Creates required configuration items in Release for connection
        to deployment provider.
      script: |-
        from com.xebialabs.xlrelease.api.v1.forms import DeploymentProviderSetup

        folderId = getCurrentFolder().getId()
        serverId = releaseVariables['server']

        deploymentProviderSetup = DeploymentProviderSetup(folderId, serverId)

        statusWebhookEventSourceId = deploymentProviderApi.setupDeploymentProvider(deploymentProviderSetup)

        releaseVariables['statusWebhookEventSourceId'] = statusWebhookEventSourceId
    - name: Autoconfigure deployment provider
      type: xlrelease.ScriptTask
      description: Generates ArgoCD config map required to enable live event notifications.
      script: |-
        autoConfigResponse = deploymentProviderApi.autoconfigureDeploymentProvider("${statusWebhookEventSourceId}")

        releaseVariables['autoconfigMessage'] = autoConfigResponse.message
        releaseVariables['autoconfigUrl'] = autoConfigResponse.url
        releaseVariables['autoconfigDetails'] = autoConfigResponse.details
    color: "#3d6c9e"
  - phase: Final
    tasks:
    - name: Autoconfig response
      type: xlrelease.Task
      description: |-
        ${autoconfigMessage}

        [docs](${autoconfigUrl})

        ```
        ${autoconfigDetails}
        ```
    color: "#3d6c9e"
  kind: WORKFLOW
  categories:
  - Application onboarding
  - Create Deployment Provider
  variables:
  - type: xlrelease.StringVariable
    key: statusWebhookEventSourceId
    requiresValue: false
    showOnReleaseStart: false
  - type: xlrelease.ReferenceVariable
    key: server
    requiresValue: false
    showOnReleaseStart: false
    label: ArgoCD server
    referencedType: argocd.APIServer
  - type: xlrelease.StringVariable
    key: autoconfigMessage
    requiresValue: false
    showOnReleaseStart: false
    label: Response message
  - type: xlrelease.StringVariable
    key: autoconfigUrl
    requiresValue: false
    showOnReleaseStart: false
    label: Response URL
  - type: xlrelease.StringVariable
    key: autoconfigDetails
    requiresValue: false
    showOnReleaseStart: false
    label: Response details
  disableNotifications: true
  author: Digital.ai
  logo:
    type: xlrelease.TemplateLogo
    contentType: image/svg+xml
    file: !file "template-logo/b9bfe08d21c6565809d11f66ac1a99629c4f88dd/argocd.svg"
  defaultTargetFolder: ./Workflow Executions
