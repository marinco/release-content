# Exported from:        http://MBP-Marin:5516/
# Release version:      24.1.0
# Date created:         Wed Oct 09 16:14:03 CEST 2024

---
apiVersion: xl-release/v1
kind: Templates
metadata:
  path: /
  home: Digital.ai - Official
spec:
- template: Deploy delete live deployment configuration
  description: Delete Deploy live deployment configuration
  scheduledStartDate: 2024-09-10T12:33:53.874+02:00
  dueDate: 2024-09-10T13:33:53.874+02:00
  phases:
  - phase: Delete live deployment config
    tasks:
    - name: Check if remote runner exists
      type: xlrelease.ScriptTask
      description: Checks if an enabled remote runner is present in the system.
      script: |-
        def check_runners(runners):
          for runner in runners:
            if runner["enabled"] and "remote" in runner["capabilities"]:
              return True
          return False

        runners = configurationApi.searchByTypeAndTitle("xlrelease.JobRunner", "")

        if not check_runners(runners):
          raise Exception("There is no job runner with 'remote' capability enabled")
    - name: Delete live deployment configuration
      type: xlrelease.ScriptTask
      description: Deletes deployment configuration from event source and from system.
      script: |-
        from com.xebialabs.xlrelease.domain import Configuration
        from com.xebialabs.deployit.plugin.api.reflect import Type

        statusWebhookEventSource = configurationApi.getConfiguration("${statusWebhookEventSourceId}")
        liveDeploymentConfigs = statusWebhookEventSource.getProperty("liveDeploymentConfigs")

        configToDelete = None
        for config in statusWebhookEventSource.getProperty("liveDeploymentConfigs"):
          if config.id == "${liveDeploymentConfigurationId}":
           configToDelete = config
           break

        if configToDelete:
          liveDeploymentConfigs.remove(configToDelete)
          statusWebhookEventSource.setProperty("liveDeploymentConfigs", liveDeploymentConfigs)
          configurationApi.updateConfiguration("${statusWebhookEventSourceId}", statusWebhookEventSource)
          configurationApi.deleteConfiguration(configToDelete.id)
    - name: Autoconfigure deployment provider
      type: xlrelease.ScriptTask
      script: |-
        autoconfigResponse = deploymentProviderApi.autoconfigureDeploymentProvider("${statusWebhookEventSourceId}")
        releaseVariables['autoconfigMessage'] = autoconfigResponse.message
        releaseVariables['autoconfigUrl'] = autoconfigResponse.url
    - name: Autoconfig response
      type: xlrelease.Task
      description: |-
        ${autoconfigMessage}

        [View in Deploy](${autoconfigUrl})
    color: "#3d6c9e"
  kind: WORKFLOW
  tags:
  - Remote Deploy
  - deployment provider
  - delete
  categories:
  - Application onboarding
  variables:
  - type: xlrelease.StringVariable
    key: statusWebhookEventSourceId
  - type: xlrelease.StringVariable
    key: liveDeploymentConfigurationId
    requiresValue: false
  - type: xlrelease.StringVariable
    key: autoconfigMessage
    requiresValue: false
    showOnReleaseStart: false
    label: Response message
  - type: xlrelease.StringVariable
    key: autoconfigUrl
    requiresValue: false
    showOnReleaseStart: false
    label: Response URL
  disableNotifications: true
  author: Digital.ai
  logo:
    type: xlrelease.TemplateLogo
    contentType: image/png
    file: !file "template-logo/32ac25401af79dc609dd3adc3b2bc18ffafedbaa/deploy.svg"
  defaultTargetFolder: ./Workflow Executions
